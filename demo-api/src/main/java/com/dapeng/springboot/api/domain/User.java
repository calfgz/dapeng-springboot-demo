package com.dapeng.springboot.api.domain;

        import java.util.Optional;
        import com.github.dapeng.org.apache.thrift.TException;
        import com.github.dapeng.org.apache.thrift.protocol.TCompactProtocol;
        import com.github.dapeng.util.TCommonTransport;

        /**
         * Autogenerated by Dapeng-Code-Generator (2.2.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

        *
        **/
        public class User{
        
            /**
            *
            **/
            public Optional<String> id = Optional.empty();
            public Optional<String> getId(){ return this.id; }
            public void setId(Optional<String> id){ this.id = id; }

            public Optional<String> id(){ return this.id; }
            public User id(Optional<String> id){ this.id = id; return this; }
          
            /**
            *
            **/
            public Optional<String> name = Optional.empty();
            public Optional<String> getName(){ return this.name; }
            public void setName(Optional<String> name){ this.name = name; }

            public Optional<String> name(){ return this.name; }
            public User name(Optional<String> name){ this.name = name; return this; }
          
            /**
            *
            **/
            public int age ;
            public int getAge(){ return this.age; }
            public void setAge(int age){ this.age = age; }

            public int age(){ return this.age; }
            public User age(int age){ this.age = age; return this; }
          

        public static byte[] getBytesFromBean(User bean) throws TException {
          byte[] bytes = new byte[]{};
          TCommonTransport transport = new TCommonTransport(bytes, TCommonTransport.Type.Write);
          TCompactProtocol protocol = new TCompactProtocol(transport);

          new com.dapeng.springboot.api.domain.serializer.UserSerializer().write(bean, protocol);
          transport.flush();
          return transport.getByteBuf();
        }

        public static User getBeanFromBytes(byte[] bytes) throws TException {
          TCommonTransport transport = new TCommonTransport(bytes, TCommonTransport.Type.Read);
          TCompactProtocol protocol = new TCompactProtocol(transport);
          return new com.dapeng.springboot.api.domain.serializer.UserSerializer().read(protocol);
        }

        public String toString(){
          StringBuilder stringBuilder = new StringBuilder("{");
            stringBuilder.append("\"").append("id").append("\":\"").append(this.id.isPresent()?this.id.get():null).append("\",");
    stringBuilder.append("\"").append("name").append("\":\"").append(this.name.isPresent()?this.name.get():null).append("\",");
    stringBuilder.append("\"").append("age").append("\":").append(this.age).append(",");
    
            stringBuilder.deleteCharAt(stringBuilder.lastIndexOf(","));
            stringBuilder.append("}");

          return stringBuilder.toString();
        }
      }
      